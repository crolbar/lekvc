on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        goarch: [amd64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'

      # LINUX BUILD
      - name: Install speex
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libspeexdsp-dev pkg-config

      - name: Build
        if: runner.os == 'Linux'
        run: |
          go build -C client -o lekvc-${{ matrix.os }}


      # WINDOWS "BUILD"
      - name: Prepare headers and DLL on Windows
        if: runner.os == 'Windows'
        run: |
          mkdir C:\speex
          xcopy include C:\speex\include /E /I
          copy lib\libspeexdsp.dll C:\speex\libspeexdsp.dll

      - name: Build
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $env:CGO_CFLAGS = "-IC:\speex\include"
          $env:CGO_LDFLAGS = "-LC:\speex -lspeexdsp"
          go build -C client -o lekvc-windows.exe
          copy C:\speex\libspeexdsp.dll client\libspeexdsp.dll

      - name: Prepare Windows package
        if: runner.os == 'Windows'
        run: |
          mkdir client\lekvc-${{ matrix.os }}
          copy client\lekvc-windows.exe client\lekvc-${{ matrix.os }}\
          copy client\libspeexdsp.dll client\lekvc-${{ matrix.os }}\


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lekvc-${{ matrix.os }}
          path: ./client/lekvc-${{ matrix.os }}
    
  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Archive
        run: |
          cd artifacts
          for dir in */; do
            zip -r "${dir%/}.zip" "$dir"
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
